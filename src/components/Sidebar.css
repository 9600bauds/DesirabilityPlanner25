:root {
  --sidebar-bg: #aa643b;
  --selected-highlight: #e48c59;
  --divider-base: #5a3a1a; 
  --divider-highlight: #c8a064; 
  --divider-shadow: #3c240e;

  --divider-width: 4px;
  --row-gap: 0.2em;
  --column-gap: 0.5em;
}

#sidebar-container {
  height: 100%;
  width: 20%;        /* Primary desired width */
  min-width: 120px;   /* Minimum it can shrink to*/
  display: flex;
  flex-direction: column;
  flex-grow: 0;     /* Sidebar should NOT grow */
  flex-shrink: 0;   /* Sidebar should NOT shrink beyond its min-width (width acts as basis) */
  background-color: var(--sidebar-bg);
  box-sizing: border-box;
}
@media (max-aspect-ratio: 3/2) {
  #sidebar-container {
    width: 15%;        /* A little narrower on very tall screens */
}
}

.sidebar-horizontal-separator {
  opacity: 1; /* Why on Earth does Bootstrap give <hr>s 0.25 opacity? */
  border: none;
  height: var(--divider-width);
  flex-shrink: 0; /* Separator should not shrink vertically */
  width: 90%;
  margin: 0.75em auto;
  background-color: var(--divider-base);
  box-shadow:
    inset 0 1px 0 var(--divider-shadow),
    inset 0 -1px 0 var(--divider-highlight);
  position: relative;
}

.button-grid {
  display: grid;
  row-gap: var(--row-gap);
  column-gap: var(--column-gap);
  flex-basis: 0;
  flex-shrink: 1; /* Allow grids to shrink if needed */
  overflow: hidden; /* Prevent their own content from overflowing if grid items are too big */
  position: relative; /* For positioning pseudo-elements relative to the grid container */
}
.button-grid > * { /* ".button-grid > *" means: all CHILDREN of the button grid! */
  width: 100%;
  height: 100%;
  padding: 0;
  display: flex;
  position: relative; /* For positioning pseudo-elements relative to the grid container */
  opacity: 1 !important; /* Bootstrap lowers the opacity of the whole button, which also affects the separator. We'll do this ourselves to just the image. */
  transition: filter 0.15s ease-in-out, opacity 0.15s ease-in-out;
}
.button-grid > *[disabled] .button-icon {
  filter: grayscale(100%);
  opacity: 0.65 !important;
}
.button-grid > *::after {
  /* Horizontal separator */
  content: "";
  position: absolute;
  width: var(--divider-width); 
  background-color: var(--divider-base);
  box-shadow:
    inset -1px 0 0 var(--divider-highlight),
    inset 1px 0 0 var(--divider-shadow);
  /* Make it extend from top of row-gap above to bottom of row-gap below */
  top: calc(var(--row-gap) / -2);
  bottom: calc(var(--row-gap) / -2);
  /* Put it to the right inbetween both columns */
  right: calc( (var( --column-gap ) / -2) - (var(--divider-width)) ); /* -(half column-gap) - (divider width) */
}

/* Base style */
.button-icon {
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;
  display: block;
  pointer-events: none; /* No clickdrag please */
  border-radius: 0.2rem;
}
/* Highlight when mousing over */
.button-grid > *.grid-button:not([disabled]):not(.selected):hover .button-icon,
.button-grid > *.grid-button:not([disabled]):not(.selected):focus-visible .button-icon,
.button-grid > *.grid-button:not([disabled]):not(.selected):active .button-icon {
  background-color: var(--selected-highlight);
  box-shadow: inset 0 0 1.5em 0.1em var(--sidebar-bg), inset 0 0 1em 0.3em var(--sidebar-bg);
}
/* Hideous border when selected */
.grid-button:active .button-icon, .grid-button.selected .button-icon {
  background-color: var(--selected-highlight);
  box-shadow: inset 0 0 1.5em #000000, inset 0 0 0.75em #000000 !important; /* Yes, this is hideous, but it's this hideous in the game too! */
  /* Offset it a bit downwards */
  margin-top: 0.4em;
  margin-left: 0.15em;
}

#top-controls {
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(2, minmax(0, 1fr));
  flex-grow: 3;  
}
@media (max-aspect-ratio: 3/2) {
  #top-controls {
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(3, minmax(0, 1fr));
  }
}

#bar-controls {
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(1, minmax(0, 1fr));
  flex-grow: 1;
}
@media (max-aspect-ratio: 3/2) {
  #bar-controls {
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(2, minmax(0, 1fr));
    flex-grow: 1.5; /* Make it a bit bigger*/
  }
}

#bottom-controls {
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(4, minmax(0, 1fr));
  flex-grow: 6;
}
@media (max-aspect-ratio: 3/2) {
  #bottom-controls {
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(6, minmax(0, 1fr));
    flex-grow: 5; /* Make it a bit smaller*/
  }
}